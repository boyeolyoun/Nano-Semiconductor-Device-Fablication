// source file

`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: University
// Engineer: Boyeol Youn
// 
// Create Date: 2021/02/19 13:23:00
// Design Name: 4 bit counter
// Module Name: counter_4_bit
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: when posedge clk, add value of '1'. reset value is '0'
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module counter_4_bit(
input clk,
input reset_n,
output [3:0] cnt
    );
    
    reg [3:0] cnt;
    wire cnt_value =1;
    always @ (posedge clk or negedge reset_n) begin
        if(!reset_n) begin
            cnt <= 4'b0;
         end
         else begin
            cnt <= cnt + cnt_value;
         end
     end
     
endmodule

//Testbenck

`timescale 1ns / 1ps

module counter_4_bit_tb;
reg clk, reset_n;
wire [3:0] o_cnt;

//clock generator
always
    #5 clk = ~clk;

//initialize value

initial begin
$display("initialize value [%d]", $time);
    reset_n =1;
    clk = 0;
    
//reset_n generator
$display("Reset! [%d]", $time);
#100 reset_n = 0;
#10 reset_n = 1;

//start
$display("Start! [%d]", $time);
#1000
$display("Finish! [%d]", $time);
$finish;
end

//call DUT(Design Under Test) or UUT(Unit Under Test)
counter_4_bit uut(
    .clk(clk),
    .reset_n(reset_n),
    .cnt(o_cnt)  // // mapping, Other names are available
    );
    
endmodule

//Console
# run 1000ns
initialize value [                   0]
Reset! [                   0]
Start! [                 110]
xsim: Time (s): cpu = 00:00:17 ; elapsed = 00:00:08 . Memory (MB): peak = 1810.938 ; gain = 37.266
INFO: [USF-XSim-96] XSim completed. Design snapshot 'counter_4_bit_tb_behav' loaded.
INFO: [USF-XSim-97] XSim simulation ran for 1000ns
launch_simulation: Time (s): cpu = 00:00:21 ; elapsed = 00:00:37 . Memory (MB): peak = 1810.938 ; gain = 45.008
